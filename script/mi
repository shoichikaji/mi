#!perl
use 5.14.0;
use utf8;
use warnings;
use Dist::Milla::App;
use Path::Tiny;
use Time::Piece ();
package Path::Tiny {
    sub replace {
        my ($self, $sub) = @_;
        local $_ = $self->slurp;
        $sub->();
        $self->spew($_);
        $self;
    }
}

sub milla { local @ARGV = @_; state $app = Dist::Milla::App->new; $app->run }

my $module = shift;
$module = shift if $module && $module eq "new";
die "Usage: mi MODULE\n" if !$module || $module =~ /^(-h|--help)$/;
$module =~ s/-/::/g;

my $github_user = `git config --global github.user`
    or die "Need to set `git config --global github.user yourname`\n";
my $github_host = `git config --global github.host` || "github.com";
my $user = `git config --global user.name`
    or die "Need to set `git config --global user.name yourname`\n";
my $email = `git config --global user.email`
    or die "Need to set `git config --global user.email yourmail`\n";
chomp $_ for $github_user, $github_host, $user, $email;

milla "new", $module;

my $dir = $module =~ s/::/-/gr;
chdir $dir or die; # XXX

unlink $_ for qw(Build.PL t/basic.t);
mkdir $_ for qw(script xt);

path(".gitignore")->append(<<'...');
/.carmel/
/MANIFEST
/META.yml
/Makefile
/Makefile.old
/blib/
/cpanfile.snapshot
/local/
/pm_to_blib
...

path('dist.ini')->spew(<<"...");
name = $dir

[\@Milla]
installer = MakeMaker
-remove = ReadmeAnyFromPod

[Metadata]
x_static_install = 1
...

path('.travis.yml')->spew(<<'...');
language: perl
perl:
  - "5.22"
  - "5.20"
  - "5.18"
  - "5.16"
  - "5.14"
  - "5.12"
  - "5.10"
  - "5.8"
install:
  - cpanm -nq --installdeps --with-develop .
script:
  - prove -l t xt
sudo: false
...

path("t/00_use.t")->spew(<<"...");
use strict;
use warnings;
use Test::More tests => 1;
use_ok '$module';
...

path("xt/01_basic.t")->spew(<<"___");
use strict;
use warnings;
use Test::More;
use $module;

pass "ok";

done_testing;
___

path( "lib/" . ($module =~ s{::}{/}gr) . ".pm" )->replace(sub {
    s{\nuse strict;\nuse 5.008_005;}{use strict;\nuse warnings;\n};
    s{=head1 SEE ALSO\n\n}{};
    s{=head1 AUTHOR[^=]*}{}sm;
    s{=head1 LICENSE\n\n}{};
    s{=head1 COPYRIGHT}{=head1 COPYRIGHT AND LICENSE};
    s{Copyright (\d+)- ([^\n]+)}{Copyright $1 $2 <$email>};
});

path("cpanfile")->spew(<<'___');
requires 'perl', '5.008005';

on develop => sub {
    requires 'Test::More', '0.98';
};
___

path("Changes")->replace(sub {
    s{^\s+\-}{  -}sm;
});

my $repo = "$github_host/$github_user/$dir";
my $travis = "[![Build Status]"
           . "(https://travis-ci.org/$github_user/$dir.svg?branch=master)]"
           . "(https://travis-ci.org/$github_user/$dir)";
$travis = "" if $github_host ne "github.com";

path("README.md")->spew(<<"...");
# $module $travis

This is a perl module $module.

## Install

Make sure you have [cpanm](https://github.com/miyagawa/cpanminus).
If not, install it first:

```sh
\$ curl -sL http://cpanmin.us | perl - -nq App::cpanminus
```

Then:

```sh
\$ cpanm -nq git://$repo.git
```

## Usage

```perl
use $module
```

## License

Copyright (c) @{[ Time::Piece->new->year ]} $user

This software is licensed under the same terms as Perl.
...

!system "git remote add origin ssh://git\@$github_host/$github_user/$dir.git" or exit 1;
!system "git add --all ." or exit 1;
milla "build", "--no-tgz";
milla "clean";
!system "git add ." or exit 1;
